[project]
name = "ivy"
version = "0.1.0"
description = "A CLI tool for interacting with the Ivy service"
requires-python = ">=3.11"
dependencies = [
    "fastapi>=0.115.0",
    "httpx>=0.28.0",
    "click>=8.1.7",
    "python-dotenv>=1.1.0",
    "pydantic>=2.11.0",
    "uvicorn>=0.34.0",
    "instructor==1.8.3",
    "openai>=1.12.0",
    "pyyaml>=6.0.1",
    "html2text>=2025.4.15",
    "anthropic>=0.52.2",
    "mistralai>=1.8.1",
]

[project.scripts]
ivy = "ivy.cli.cli:cli"

[project.optional-dependencies]
dev = [
    "black>=25.1.0",
    "ruff>=0.11.0",
    "pytest>=8.4.0",
    "pytest-asyncio>=1.0.0",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["ivy"]

[tool.ruff]
line-length = 120
fixable = ["ALL"]  # Allow Ruff to fix all fixable rules
unfixable = []  # No rules that should be unfixable

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"
docstring-code-format = true
docstring-code-line-length = 120
# join-lines = true
# respect-gitignore = true
# respect-ignore = true

[tool.ruff.lint]
select = [
    "E",   # pycodestyle errors (includes E303 for blank lines)
    "F",   # pyflakes
    "I",   # isort
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
    "N",   # pep8-naming
    "D",   # pydocstyle
    "W",   # pycodestyle warnings
    # "E3",  # Explicitly include blank line rules
]
ignore = []  # No rules to ignore

[tool.ruff.lint.pycodestyle]
max-doc-length = 120
max-line-length = 120

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]  # Ignore unused imports in __init__.py files

[tool.ruff.lint.pydocstyle]
convention = "google"  # Use Google-style docstrings

[tool.black]
line-length = 120
target-version = ["py38"]
